# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Build and deploy JAR app to Azure Web App

env:
  AZURE_WEBAPP_NAME: MY_WEBAPP_NAME   # set this to your application's name
  JAVA_VERSION: '11'                  # set this to the Java version to use

on:
  pull_request:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Java version
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: 'maven'

      - name: Build with Maven
        run: mvn clean install

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: java-app
          path: '${{ github.workspace }}/target/github-action-pipeline-0.0.1-SNAPSHOT.jar'

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Upload JAR
        uses: actions/download-artifact@v4
        with:
          name: java-app
          path: '${{ github.workspace }}/target/github-action-pipeline-0.0.1-SNAPSHOT.jar'
#      - name: Copy artifact to Azure VM
#        uses: appleboy/scp-action@master
#        with:
#          host: '135.235.137.133'
#          username: 'github-pipeline'
#          password: 'github@#$123'
#          source: "."
#          target: '/home/github-pipeline/'
#      - name: Run Java App on Azure VM
#        uses: appleboy/scp-action@master
#        with:
#          host: '135.235.137.133'
#          username: 'github-pipeline'
#          password: 'github@#$123'
#          source: "."
#          target: '/home/github-pipeline/'
#          script: |
#            pkill -f 'java -jar' || true  # stop previous instance
#            nohup java -jar /home/github-pipeline/github-action-pipeline-0.0.1-SNAPSHOT.jar > app.log 2>&1 &

#name: GitHub Actions Demo
#run-name: ${{ github.actor }} is testing out GitHub Actions 🚀
#on:
#  pull_request:
#    branches: [develop]
#jobs:
#  Build:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#        with:
#          fetch-depth: 0
#      - run: ls -la
#      - name: Set up JDK 11
#        uses: actions/setup-java@v3
#        with:
#          java-version: '11'
#          distribution: 'temurin'
#          cache: maven
#      - name: Build with Maven
#        run: mvn -B package --file pom.xml
#        working-directory: ${{github.workspace}}
#  Explore-GitHub-Actions:
#    runs-on: ubuntu-latest
#    steps:
#      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
#      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
#      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
#      - name: Check out repository code
#        uses: actions/checkout@v4
#      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
#      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
#      - name: List files in the repository
#        run: |
#          ls ${{ github.workspace }}
#      - run: echo "🍏 This job's status is ${{ job.status }}."
#  Check-Other-Action:
#    runs-on: ubuntu-latest
#    steps:
#      - run: echo "🎉 running second step"